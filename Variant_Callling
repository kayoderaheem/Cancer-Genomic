#!/bin/bash

# Directory

echo "Run Prep files..."
ref="/home/numan/workspace-raheem/cancer_genomic/hg38/hg38.fa"
known_sites="/home/numan/workspace-raheem/cancer_genomic/hg38/Homo_sapiens_assembly38.dbsnp138.vcf"
aligned_reads="/home/numan/workspace-raheem/cancer_genomic/aligned_reads"
#reads="/Users/kr/Desktop/demo/VC/reads"
results="/home/numan/workspace-raheem/cancer_genomic/results"
data="/home/numan/workspace-raheem/cancer_genomic/data"

# download reference files
#wget -P /home/numan/workspace-raheem/cancer_genomic/hg38/ https://hgdownload.soe.ucsc.edu/goldenPath/hg38/bigZips/hg38.fa.gz
#gunzip /home/numan/workspace-raheem/cancer_genomic/hg38/hg38.fa.gz

# index ref - .fai file before running haplotype caller
#samtools faidx /home/numan/workspace-raheem/cancer_genomic/hg38/hg38.fa


# ref dict - .dict file before running haplotype caller
#gatk CreateSequenceDictionary R= /home/numan/workspace-raheem/cancer_genomic/hg38/hg38.fa O= /home/numan/workspace-raheem/cancer_genomic/hg38/hg38.dict

echo "STEP 2: Map to reference using BWA-MEM"

# BWA index reference 
#bwa index ${ref}


# BWA alignment
#bwa mem -t 4 -R "@RG\tID:SRR062634\tPL:ILLUMINA\tSM:SRR" ${ref} ${reads}/SRR062634_1.filt.fastq.gz ${reads}/SRR062634_2.filt.fastq.gz > ${aligned_reads}/SRR062634.paired.sam




# -----------------------------------------
# STEP 3: Mark Duplicates and Sort - GATK4
# -----------------------------------------

#echo "STEP 3: Mark Duplicates and Sort - GATK4"

#gatk MarkDuplicatesSpark -I ${aligned_reads}/SRR062634.paired.sam -O ${aligned_reads}/SRR062634_sorted_dedup_reads.bam



# ----------------------------------
# STEP 4: Base quality recalibration
# ----------------------------------


echo "STEP 4: Base quality recalibration"

# 1. build the model
#gatk BaseRecalibrator -I ${aligned_reads}/SRR23892289_sorted_dedup_reads.bam -R ${ref} --known-sites ${known_sites} -O ${data}/recal_data.table


# 2. Apply the model to adjust the base quality scores
#gatk ApplyBQSR -I ${aligned_reads}/SRR23892289_sorted_dedup_reads.bam -R ${ref} --bqsr-recal-file ${data}/recal_data.table -O ${aligned_reads}/SRR23892289_sorted_dedup_bqsr_reads.bam


echo "STEP 5: Collect Alignment & Insert Size Metrics"

#gatk CollectAlignmentSummaryMetrics R=${ref} I=${aligned_reads}/SRR23892289_sorted_dedup_bqsr_reads.bam O=${aligned_reads}/alignment_metrics.txt

#gatk CollectInsertSizeMetrics INPUT=${aligned_reads}/SRR23892289_sorted_dedup_bqsr_reads.bam OUTPUT=${aligned_reads}/insert_size_metrics.txt HISTOGRAM_FILE=${aligned_reads}/insert_size_histogram.pd

echo "STEP 6: Call Variants - gatk Mutect2"
#gatk Mutect2 -R ${ref} -I ${aligned_reads}/SRR23892289_sorted_dedup_bqsr_reads.bam -O ${results}/raw_variants.vcf


# extract SNPs & INDELS

#gatk SelectVariants -R ${ref} -V ${results}/raw_variants.vcf --select-type SNP -O ${results}/raw_snps.vcf
#gatk SelectVariants -R ${ref} -V ${results}/raw_variants.vcf --select-type INDEL -O ${results}/raw_indels.vcf



if false
then

gatk VariantFiltration \
	-R ${ref} \
	-V ${results}/raw_snps.vcf \
	-O ${results}/filtered_snps.vcf \
	-filter-name "QD_filter" -filter "QD < 2.0" \
	-filter-name "FS_filter" -filter "FS > 60.0" \
	-filter-name "MQ_filter" -filter "MQ < 40.0" \
	-filter-name "SOR_filter" -filter "SOR > 4.0" \
	-filter-name "MQRankSum_filter" -filter "MQRankSum < -12.5" \
	-filter-name "ReadPosRankSum_filter" -filter "ReadPosRankSum < -8.0" \
	-genotype-filter-expression "DP < 10" \
	-genotype-filter-name "DP_filter" \
	-genotype-filter-expression "GQ < 10" \
	-genotype-filter-name "GQ_filter"
	
# Filter INDELS
gatk VariantFiltration \
	-R ${ref} \
	-V ${results}/raw_indels.vcf \
	-O ${results}/filtered_indels.vcf \
	-filter-name "QD_filter" -filter "QD < 2.0" \
	-filter-name "FS_filter" -filter "FS > 200.0" \
	-filter-name "SOR_filter" -filter "SOR > 10.0" \
	-genotype-filter-expression "DP < 10" \
	-genotype-filter-name "DP_filter" \
	-genotype-filter-expression "GQ < 10" \
	-genotype-filter-name "GQ_filter"
	
# Select Variants that PASS filters
gatk SelectVariants \
	--exclude-filtered \
	-V ${results}/filtered_snps.vcf \
	-O ${results}/analysis-ready-snps.vcf


gatk SelectVariants \
	--exclude-filtered \
	-V ${results}/filtered_indels.vcf \
	-O ${results}/analysis-ready-indels.vcf
fi

# to exclude variants that failed genotype filters
cat analysis-ready-snps.vcf|grep -v -E "DP_filter|GQ_filter" > analysis-ready-snps-filteredGT.vcf
cat analysis-ready-indels.vcf| grep -v -E "DP_filter|GQ_filter" > analysis-ready-indels-filteredGT.vcf
